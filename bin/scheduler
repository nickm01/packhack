#!/usr/bin/env node

var config = require('../config');
var twilio = require('twilio')(config.accountSid, config.authToken);
var mongoOp = require('../model/mongo');
var sendSms = require('../sendsms');
var logging = require('../logging');
var listItems = require('../listitems');

var count = 0

function processScheduler() {

  console.log('Scheduler1');

  mongoOp.ListItems.find({'listKey':config.remindersListKey}, function(err, listItems) {
    if(err) {
      logging.logError('scheduler', '', '', err);
    } else {
      console.log('Scheduler2');
      listItems.forEach(function(listItem) {
        var familyId = listItem.familyId;
        var reminderDate = new Date(listItem.reminderWhen);
        var now = new Date();
        console.log("now: " + now);
        console.log('Scheduler2:' + reminderDate + ' userId:' + listItem.reminderUserId + ' listItemName:' + listItem.listItemName);
   	    //TODO: UTC

   	    if (reminderDate < now) {     		
          mongoOp.FamilyMembers.findOne({'familyId': familyId, 'userId':listItem.reminderUserId}, function (err, familyMember) {
            if (err) {
              logging.logError('0', familyId, bodyText, err);
              break;
            }
            // Remove listItem
            listItems.deleteListItemByName(familyId, listItem.listKey, listItem.ItemName, function(err) {
              if (err) {
                break;
              } else {
                count++;
                console.log('Count++ ' + count + ' pn:' + familyMember.phoneNumber + ' ' + familyMember.name);
                sendSms.sendSms(familyMember.phoneNumber, "Reminder: " + listItem.listItemName, function(){
                count--
                console.log('Count-- ' + count);
                if (count == 0) {
                  process.exit();
                }    
              }
            });   
          });
        }
      });
      }

    });
}
});
}

processScheduler();
